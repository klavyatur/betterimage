{"version":3,"sources":["components/BetterImage/convertedImage sync nonrecursive //.(png|jpe?g|webp|svg)$","components/BetterImage/BetterImage.js","components/App/images/avocado.png","components/App/images/cat.png","components/App/images/colors.png","components/App/images/diamond.png","components/App/images/gradient.png","components/App/images/image.png","components/App/images/light.png","components/App/images/ptable.png","components/App/images/rock.png","components/App/images/us.png","components/App/images/veg.png","components/App/App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BetterImage","props","resizedImageWidth","resizedImageHeight","shadowX","shadowY","shadowSize","shadowColor","borderColor","borderThick","borderLine","matrix1","matrix2","matrix3","matrix4","matrix5","matrix6","translatePx","translatePercent","scaleX","scaleY","skewX","skewY","resize","source","quality","rotation","blur","grayscale","brightness","contrast","sepia","invert","saturate","opacity","hueRotate","dropShadow","roundCorners","border","matrix","translate","scale","skew","perspective","rotateX","rotateY","fileName","split","pop","originalImageType","imgName","shift","images","r","map","item","replace","importAll","require","string","shadowImg","borderImage","matrixImg","translateImg","scaleImg","skewImg","chainParameters","console","log","src","style","filter","transform","width","height","borderRadius","alt","fetch","method","headers","body","JSON","stringify","imageName","convertedImg","App","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4409063e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;","import React from 'react';\nimport { Img } from 'react-image';\n\nexport default function BetterImage(props) {\n\n  ////////////////////* Hoisted Variables *////////////\n  let { resize, source, quality, rotation, blur, grayscale, brightness, contrast, sepia, invert, saturate, opacity, hueRotate, dropShadow, roundCorners, border, matrix, translate, scale, skew, perspective, rotateX, rotateY } = props;\n\n  const fileName = source.split('/').pop();\n  const originalImageType = fileName.split('.').pop();\n  const imgName = fileName.split('.').shift();\n\n  let resizedImageWidth;\n  let resizedImageHeight;\n  let shadowX;\n  let shadowY;\n  let shadowSize;\n  let shadowColor;\n  let borderColor;\n  let borderThick;\n  let borderLine;\n  let matrix1;\n  let matrix2;\n  let matrix3;\n  let matrix4;\n  let matrix5;\n  let matrix6;\n  let translatePx;\n  let translatePercent;\n  let scaleX;\n  let scaleY;\n  let skewX;\n  let skewY;\n\n  //////////////////////* Params Organized */////////////////////\n  function resizeFunc(string) {\n    string = string.split(\"x\");\n    resizedImageHeight = string[0]\n    resizedImageWidth = string[1]\n  }\n\n  function borderImage(string){\n    string = string.split(\",\");\n    borderThick = string[0];\n    borderLine = string[1];\n    borderColor = string[2];\n  }\n  \n  function shadowImg(dropShadow){\n    dropShadow = dropShadow.split(\",\");\n    shadowX = dropShadow[0];\n    shadowY = dropShadow[1];\n    shadowSize = dropShadow[2];\n    shadowColor = dropShadow[3];\n  }\n\n  function matrixImg(matrix){\n    matrix = matrix.split(\",\");\n    matrix1 = matrix[0];\n    matrix2 = matrix[1];\n    matrix3 = matrix[2];\n    matrix4 = matrix[3];\n    matrix5 = matrix[4];\n    matrix6 = matrix[5];\n  }\n\n  function translateImg(translate){\n    translate = translate.split(\",\");\n    translatePx = translate[0];\n    translatePercent = translate[1];\n  }\n\n  function scaleImg(scale){\n    scale = scale.split(\",\");\n    scaleX = scale[0];\n    scaleY = scale[1];\n  }\n\n  function skewImg(skew){\n    skew = skew.split(\",\");\n    skewX = skew[0];\n    skewY = skew[1];\n  }\n\n  function convertedImg(imgName, quality, originalImageType){\n    fetch('/api/convert', {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json' \n         },\n        body: JSON.stringify({\n          imageName: imgName,\n          quality: quality,\n          originalImageType: originalImageType\n        })\n    })\n  }\n\n  ////////////////////* Dynamic Imports */////////////////////\n  function importAll(r) {\n    let images = {};\n    r.keys().map((item) => { images[item.replace('./', '')] = r(item) })\n    return images;\n  }\n\n  const images = importAll(require.context('./convertedImage', false, /\\.(png|jpe?g|webp|svg)$/));\n\n  /////////////////* Default Chain *//////////////////////////\n    function chainParameters(){\n      if (resize != null) {\n        resizeFunc(resize);\n      }\n      if (contrast == null) contrast = 100;\n      if (sepia == null) sepia = 0;\n      if (saturate == null) saturate = 100;\n      if (blur == null) blur = 0;\n      if (opacity == null) opacity = 100;\n      if (brightness == null) brightness = 100;\n      if (grayscale == null) grayscale = 0;\n      if (rotation == null) rotation = 0;\n      if (invert == null) invert = 0; \n      if (hueRotate == null) hueRotate = 0;\n      if (roundCorners == null) roundCorners = 0;\n      if (perspective == null) perspective = 0;\n      if (quality == null) quality = 100;\n      if (rotateX == null) rotateX = 0;\n      if (rotateY == null) rotateY = 0;\n      if (dropShadow == null) {\n        shadowX = 0;\n        shadowY = 0;\n        shadowSize = 0;\n        shadowColor = \"black\";\n      } else {\n        shadowImg(dropShadow);\n      }\n      if (border == null) {\n        borderThick = 0;\n        borderLine = \"solid\";\n        borderColor = \"black\";\n      } else {\n        borderImage(border)\n      }\n      if (matrix == null) {\n        matrix1 = 1;\n        matrix2 = 0;\n        matrix3 = 0;\n        matrix4 = 1;\n        matrix5 = 0;\n        matrix6 = 0;\n      } else {\n        matrixImg(matrix);\n      }\n      if (translate == null) {\n        translatePx = 0;\n        translatePercent = 0;\n      } else {\n        translateImg(translate);\n      }\n      if (scale == null) {\n        scaleX = 1;\n        scaleY = 1;\n      } else {\n        scaleImg(scale)\n      }\n      if (skew == null) {\n        skewX = 0;\n        skewY = 0;\n      } else {\n        skewImg(skew)\n      }\n    }\n    \n  ////////////////////* Render BI */////////////////////\n  return (\n    <div>\n      {chainParameters()}\n      {console.log(\"return: image source \", images[`${imgName}.webp \\n`])}\n      {images[`${imgName}.webp`] ? <Img src={[images[`${imgName}.webp`], images['placeholder.webp']]} style={{filter:`grayscale(${grayscale}%) blur(${blur}px) brightness(${brightness}%) contrast(${contrast}%) sepia(${sepia}%) invert(${invert}%) saturate(${saturate}%) opacity(${opacity}%) hue-rotate(${hueRotate}deg) drop-shadow(${shadowX}px ${shadowY}px ${shadowSize}px ${shadowColor})`, transform: `matrix(${matrix1}, ${matrix2}, ${matrix3}, ${matrix4}, ${matrix5}, ${matrix6}) translate(${translatePx}px, ${translatePercent}%) scale(${scaleX}, ${scaleY}) skew(${skewX}deg, ${skewY}deg) rotateX(${rotateX}deg) rotateY(${rotateY}deg) perspective(${perspective}px) rotate(${rotation}deg)`, width: `${resizedImageWidth}px`, height: `${resizedImageHeight}px`, borderRadius: `${roundCorners}px`, border: `${borderThick}px ${borderLine} ${borderColor}`}} alt=\"image failed to load\"/> : convertedImg(imgName, quality, originalImageType) }\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/avocado.9f4aca29.png\";","export default __webpack_public_path__ + \"static/media/cat.bed8f65f.png\";","export default __webpack_public_path__ + \"static/media/colors.9e9c89ce.png\";","export default __webpack_public_path__ + \"static/media/diamond.bb26e3d9.png\";","export default __webpack_public_path__ + \"static/media/gradient.a2c313ed.png\";","export default __webpack_public_path__ + \"static/media/image.06e9c233.png\";","export default __webpack_public_path__ + \"static/media/light.ff3699e9.png\";","export default __webpack_public_path__ + \"static/media/ptable.4097028f.png\";","export default __webpack_public_path__ + \"static/media/rock.c16fc743.png\";","export default __webpack_public_path__ + \"static/media/us.8dd24dd9.png\";","export default __webpack_public_path__ + \"static/media/veg.2538e77f.png\";","import React, { Component } from 'react';\nimport BetterImage from '../BetterImage/BetterImage.js';\nimport img1 from './images/avocado.png';\nimport img2 from './images/cat.png';\nimport img3 from './images/colors.png';\nimport img4 from './images/diamond.png';\nimport img5 from './images/gradient.png';\nimport img6 from './images/image.png';\nimport img7 from './images/light.png';\nimport img8 from './images/ptable.png';\nimport img9 from './images/rock.png';\nimport img10 from './images/us.png';\nimport img11 from './images/veg.png';\n\nclass App extends Component {\n  render() { \n    return (\n      <div>\n\n      {/* sample original image rendering here */}\n        <h1> Original Image </h1>\n          <img src={img1} />\n          {/* <img src={img2} />\n          <img src={img3} />\n          <img src={img4} />\n          <img src={img5} />\n          <img src={img6} />\n          <img src={img7} />\n          <img src={img8} />\n          <img src={img9} />\n          <img src={img10} />\n          <img src={img11} />\n          */}\n\n      {/* betterimage rendering here */}\n        <h1> BetterImage</h1> \n        <BetterImage\n          source={img1}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img1}\n          quality={'80'}\n          resize={'600x800'} \n        />\n        <BetterImage\n          source={img2}\n          quality={'80'}\n          resize={'600x800'} \n        />\n        <BetterImage\n          source={img3}\n          quality={'80'}\n          resize={'600x800'} \n        />\n        <BetterImage\n          source={img4}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img5}\n          quality={'80'}\n          resize={'600x800'} \n        />\n        <BetterImage\n          source={img6}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img7}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img8}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img9}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img10}\n          quality={'80'}\n          resize={'600x800'}\n        />\n        <BetterImage\n          source={img11}\n          quality={'80'}\n          resize={'600x800'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}